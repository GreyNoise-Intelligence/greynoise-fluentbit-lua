[SERVICE]
    HTTP_Server  On
    HTTP_Listen  0.0.0.0
    HTTP_PORT    2020
    Parsers_File /app/conf/parsers.conf
    Flush 3

[INPUT]
    Name   tail
    Tag    vpc.*
    Path   ${INPUT_PATH}
    DB.sync off
    Parser vpc
    Alias  vpc_input
    Read_from_Head On

[FILTER]
    Name    lua
    Match   vpc.*
    script  /opt/greynoise/src/greynoise.lua
    call    gn_filter

[FILTER]
    Name          rewrite_tag
    Match         vpc.*
    Rule          $gn_noise ^(true)$ noise false
    Emitter_Name  gn_noise

[FILTER]
    Name          rewrite_tag
    Match         vpc.*
    Rule          $gn_riot ^(true)$ riot false
    Emitter_Name  gn_riot

[FILTER]
    Name          rewrite_tag
    Match         vpc.*
    Rule          $gn_bogon ^(true)$ private false
    Emitter_Name  gn_bogon

[FILTER]
    Name          rewrite_tag
    Match         vpc.*
    Rule          $gn_invalid ^(true)$ invalid false
    Emitter_Name  gn_invalid

[FILTER]
    Name          rewrite_tag
    Match         vpc.*
    Rule          $gn_unknown ^(true)$ unknown false
    Emitter_Name  gn_unknown

[OUTPUT]
    Name s3
    Match *
    bucket ${S3_BUCKET}
    region ${AWS_DEFAULT_REGION}
    store_dir /tmp/s3_vpc_buffer
    use_put_object On
    total_file_size 1M
    upload_timeout 30s
    compression gzip
    s3_key_format /${S3_LOG_PREFIX}/filtered/$TAG/%Y/%m/%d/%H/%M